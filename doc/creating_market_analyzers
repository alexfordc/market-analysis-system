Creating Market Analyzers with the Market Analysis Server

This document provides a tutorial on creating market analyzers with the
Market Analysis Server (MAS).  It consists of a brief introduction to
the concepts used by the MAS command-line interface for creating market
analyzers, as well as some specific examples of creating an analyzer.

A market analyzer, also referred to as an event type, is a set of
criteria to be used in analysis of market data, resulting in notification
(typically by email) of events that meet the criteria.  An example
of such an event is when the MACD difference line crosses above the
MACD signal line.  In order to use more than one criterion, composite
market analyzers, made up of other market analyzers, can be constructed.
Example 2 below shows how to do this.

Example 1 shows how to create a market analyzer that checks if the
stochastic %D value crosses from above to below 35% for daily data.
Example 2 shows how to create a composite market analyzer that uses
the one created in Example 1 combined with one that checks for the MACD
difference line crossing from below to above the MACD signal line for
weekly data.  This analyzer produces a buy signal for markets that meet
the criteria - weekly MACD crossover shows an uptrend and daily stochastic
below 35% shows an oversold condition.

Example 3 shows how to create a market analyzer that checks for volume
spikes.  This can be useful to detect stocks where a volume spike precedes
a strong price breakout, which sometimes happens when knowledgeable
investors act on news not yet readily available to the public.


Example 1:  Stochastic %D Cross-below 35%

First, make sure that the mas server is running.  You can either run it
in the foreground and use its command-line interface directly, or you
can run it in the background and connect with it using either the macl
or maclj scripts.

Once you have access to the MAS command-line interface, enter 'm'
(Edit market analyzers) from the main menu.  Then enter 'c' (Create a
new market analyzer).  Next choose 's' (Simple) to make a simple (not
compound) market analyzer.  When it asks if you want to use one or two
technical indicators, choose two.  (You want one for Stochastic %D and
one for the 35% crossover value.)

Next, for the left technical indicator, select "Stochastic %D".  For the
right indicator, select "Line".  It will then ask for the Line's starting
(leftmost) y value.  Since you want the crossover value to be 35%,
enter 35.  When it asks for the Line's slope, enter 0.  Since a slope
of 0 means the line does not rise or fall, this ensures that the y value
of the line will remain 35 for the length of the line.

The system will then ask for the trading period type for the new
market analyzer.  Since you want the stochastic crossover criteria to
be for daily data, select "daily".  It will then ask if the crossover
detection should be below-to-above, above-to-below, or both.  Select
"above-to-below".

It will then ask if you want to define an operator (which will add extra
criteria to the analyzer).  You don't need this, so answer no.

The system will then ask for a name for the new market analyzer (event).
Enter a name that you think is appropriate, such as:
Stochastic %D/35% oversold crossover - Buy signal.
This completes the definition of the
stochastic %D above to below crossover market analyzer.


Example 2:  MACD Difference/signal Crossover and Stochastic %D Cross-below 35%

This example defines an analyzer that uses the one created in Example 1,
combined with the weekly MACD difference/signal crossover
analyzer.  (This analyzer should already exist if you are using the
market analyzer library included with the current release.)

From the main menu, choose 'm' (Edit market analyzers), then choose 'c'
(Create a new market analyzer) to create a new market analyzer.  Then
choose 'c' (Compound), since you want a compound or composite analyzer.
Next the system asks for the left component of the compound analyzer.
Since what we want is the long-range signal - weekly MACD crossover - to
precede the short range oversold signal, the long range signal should
be set to occur before the short range signal.  Since before-ness in
time is conceptually to the left, the left analyzer will be the long
range analyzer, the one whose signal is expected before the short range
analyzer.  So choose the "MACD difference/signal crossover event - below
to above", the bullish MACD signal.  This is a weekly signal that will
be triggered when a market's MACD difference line crosses from below to
above the MACD signal line.

The system will then ask for the right component.  Choose the stochastic
%D crossover analyzer that you created above.  It will then ask if you
want to specify a time extension to match events from the left analyzer
that occur before events from the right analyzer.  Since you want to
know if the MACD crossover occurs before the stochastic oversold signal,
you need to answer yes.  Choose an appropriate amount of time for
the left signal to be included if it occurs before the right signal.
You can choose to enter days, months, and/or years.  In my system,
I chose 28 days.  When you are finished selecting days/months/years,
enter 'e' to end.

It will then ask if you want to add a time extension to match events
from the left analyzer that occur after events from the right analyzer.
Since you don't want to know about MACD crossover events that occur
after stochastic oversold events, say no.

Next it asks if you want to specify an event type as target for the left
analyzer's date and time.  You don't need this here, so answer no.

Finally, select a good name for the compound indicator, such as:
[MACD below/above crossover] / [Stochastic%D/35% oversold crossover] <Buy>

This completes the creation of a market analyzer that creates buy signals
when the weekly MACD difference line crosses over the weekly MACD signal
line within the specified period of time before the Stochastic %D function
crosses below the 35% line.  If you wish to view the structure of the
new analyzer, you can select 'v' (View a market analyzer) and then select
the analyzer.

You will probably want to also create a market analyzer for the reverse
signal - weekly MACD difference line crossing below the weekly MACD signal
line and stochastic %D crossing above the 65% line.  Using the above example,
you should find this a straightforward process.

Note that if you decide you want to change the 35% crossover value of the
stochastic oversold part of the compound indicator you created, you can
do this by, from the main menu, selecting 'e' (Edit indicators), and then
'a' (Edit market-analysis indicators).  Then select the MACD crossover /
stochastic oversold signal you created.  Then select "Line", which is
the indicator that holds the 35% crossover value.  Then select to edit
the y-value of the Line.  Enter a new value, such as 30.  And enter 0 to
exit this menu, and 0 again to exit the market analyzer selection menu.
You can also, if you like, use this procedure to edit the MACD crossover
values - for example, the n-values used for the moving averages for
MACD difference.


Example 3:  Volume Spike Detector

This example shows the creation of a market analyzer that will produce
a signal if the daily volume is more than x times greater than the
exponential moving average of the volume for the previous day, where x
is a (possibly fractional) value that you will choose.

Before following this example to create the volume spike detector, you
will need to make sure an "EMA of Volume" indicator has been created.
If this indicator has not yet been created, follow the instructions in
"Example 3: Exponential Moving Average of Volume", in creating_indicators.

To get to the market analyzer creation menu, from the main menu,
choose 'm' (Edit market analyzers), then choose 'c' (Create a new market
analyzer) to create a new market analyzer.

When creating a market analyzer, it often helps to think about what the
analyzer needs to do and then draw a picture of it before creating it.
We will do this in this example.

First, since the analyzer will be processing only one stream of data -
market volume - it will need to be both a simple (non-compound) analyzer
and it will analyze one indicator, rather than two.  Second, an operator
will be needed for this analyzer, since the expression "volume > (previous
period's EMA of volume) * x" needs to be evaluated for each period.

Third, there is a complication that we want to compare one type of data,
volume, with another type of data, EMA of volume.  This will require the
use of the FUNCTION_BASED_COMMAND, will allows the results of a function
to be used in a composite operator, and will allow the needed comparison
of volume with EMA of volume.

This will require a composite operator that can be drawn as a tree:


                          GT_OPERATOR
                           /       \
                      VOLUME     MULTIPLICATION
                                   /        \
                   FUNCTION_BASED_COMMAND  CONSTANT (x)
                             |
                   SETTABLE_OFFSET_COMMAND
                             |
                    BASIC_NUMERIC_COMMAND

GT_OPERATOR (greater-than operator) provides the boolean greater than
operation needed to express "volume > (previous period's EMA of volume) * x".
VOLUME obtains the volume for the current period as GT_OPERATOR's
left operand.  MULTIPLICATION, GT_OPERATOR's right operand, provides
the multiplication operation for "(previous period's EMA of volume) * x".
MULTIPLICATION's left operand, FUNCTION_BASED_COMMAND, will use its
operand to extract the EMA of volume value for the previous period.
(FUNCTION_BASED_COMMAND will also use the EMA of Volume function, defined
in the creating_indicators example, to obtain the EMA of volume values.)
SETTABLE_OFFSET_COMMAND, FUNCTION_BASED_COMMAND's operand, will be used
to access the previous period's data.  SETTABLE_OFFSET_COMMAND will use
its operand, BASIC_NUMERIC_COMMAND, to extract the EMA value.  CONSTANT,
MULTIPLICATION's right operand, provides the x in "(previous period's
EMA of volume) * x".

Now that we have a picture of what we need to create, we can proceed to
build our market analyzer.  After choosing 'c' (Create a new market analyzer),
as instructed above, the system asks whether we want a simple or compound
analyzer.  Since we determined that a simple analyzer is needed, choose 's'
(Simple).  Then choose the number of indicators the analyzer will use - One.

The system then displays a list of the existing technical indicators.
Since the type of data we want to analyze here is volume, which is a field
of the raw market data, rather than a function, like moving average,
we need to choose the "Market Data" indicator, which, unlike the other
indicators, simply provides the market data for each period for analysis.

The system then asks for the object to use as the market analyzer's
root operator.  Referring to the diagram of the operator hierarchy we
drew above, we see that the root, or top level, operator will be the
GT_OPERATOR.  Select that operator.  For the GT_OPERATOR's left operand,
according to our diagram, select VOLUME.  For the GT_OPERATOR's right
operand select MULTIPLICATION.

For MULTIPLICATION's left operand, according to the diagram, choose
FUNCTION_BASED_COMMAND.  The system will ask for an indicator for
FUNCTION_BASED_COMMAND's input.  Select the "EMA of Volume" indicator
that you created in "Example 3: Exponential Moving Average of Volume" of
the creating_indicators document.  For FUNCTION_BASED_COMMAND's operand,
choose SETTABLE_OFFSET_COMMAND.  For SETTABLE_OFFSET_COMMAND's operand,
select BASIC_NUMERIC_COMMAND.

The system then asks for the left offset value for the
SETTABLE_OFFSET_COMMAND.  Since the SETTABLE_OFFSET_COMMAND is being
used to access the previous period data (the volume EMA for the previous
period) - one period to the left - enter 1.

For MULTIPLICATION's right operand, according to the diagram, choose the
CONSTANT object.  Its value will be the value you choose for x in the
formula: "volume > (previous period's EMA of volume) * x".  For example,
if you want to detect if the current period's volume is 2.5 times greater
than the volume EMA of the previous period, choose 2.5.

The system then asks for the type of trading period.  Since we want to
check for volume spikes on a daily basis, choose "daily".  Choose a good
descriptive name for the analyzer, such as "Volume/Volume-EMA spike".

This concludes the creation of the volume spike market analyzer.
You may wish to test the analyzer by choosing a data file that has
no existing volume spikes (or editing one so that it has no spikes)
and then changing the volume field of one or more records of the file
to be more than x times greater than the previous day's EMA of volume.
Then you can run the market analysis, making sure that the start date for
processing is set to a date that is before the dates of the records you
changed; you should receive a signal for each of the records you changed.
(Don't forget that you need to set up an event registrant - 'r' from
the main menu - before you can receive signals for this new event.)

Whenever you add a new market analyzer, you should do some testing on it
to make sure that it does what you intended it to do.  This is also true
for new technical indicators.
