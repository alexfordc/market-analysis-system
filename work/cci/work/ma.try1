e
c
n
N_RECORD_ONE_VARIABLE_FUNCTION
c
command-based moving average - test 1
No Input Function
y
DIVISION
c
LOOP_COMMAND
c
COMMAND_SEQUENCE
e
Loop initialization sequence
y
NUMERIC_ASSIGNMENT_COMMAND
e
Set current index value
NUMERIC_VALUE_COMMAND
e
Current period index
n
0
INDEX_EXTRACTOR
e
Get current period index
BASIC_LINEAR_COMMAND
c
No Input Function
y
n
y
NUMERIC_ASSIGNMENT_COMMAND
e
Initialize i
NUMERIC_VALUE_COMMAND
e
i
n
0
ADDITION
c
SUBTRACTION
e
Current index - n
shared NUMERIC_VALUE_COMMAND ({Current period index})
c
N_VALUE_COMMAND
d
y
5
NUMERIC_VALUE_COMMAND
e
1
n
1
n
y
NUMERIC_ASSIGNMENT_COMMAND
e
sum := 0
NUMERIC_VALUE_COMMAND
e
sum
n
0
NUMERIC_VALUE_COMMAND
e
0
n
0
n
n
EQ_OPERATOR
e
i = current period index + 1
shared NUMERIC_VALUE_COMMAND ({i})
c
ADDITION
e
Current index + 1
shared NUMERIC_VALUE_COMMAND ({Current period index})
c
shared NUMERIC_VALUE_COMMAND ({1})
c
NUMERIC_VALUED_COMMAND_WRAPPER
e
Loop body
COMMAND_SEQUENCE
e
Loop body sequence
y
NUMERIC_ASSIGNMENT_COMMAND
e
sum := sum + close @ i
shared NUMERIC_VALUE_COMMAND ({sum})
c
ADDITION
e
sum + close @ i
shared NUMERIC_VALUE_COMMAND ({sum})
c
VALUE_AT_INDEX_COMMAND
e
close @ i
shared NUMERIC_VALUE_COMMAND ({i})
c
No Input Function
y
CLOSING_PRICE
e
close
y
y
NUMERIC_ASSIGNMENT_COMMAND
e
i := i + 1
shared NUMERIC_VALUE_COMMAND ({i})
c
ADDITION
e
i + 1
shared NUMERIC_VALUE_COMMAND ({i})
c
shared NUMERIC_VALUE_COMMAND ({1})
c
n
shared N_VALUE_COMMAND
c
5
s
-
x
