#!/bin/bash
# Usage: search_dependencies clusterA clusterB
# Search for dependencies of classes in clusterA upon classes in clusterB

Progname=$(basename $0)
Result=0

usage() {
	echo "Search for dependencies of clusterA upon clusterB."
	echo "Usage: $Progname clusterA clusterB"
}

# A list of all eiffel (*.e) files within the specified directory
eiffel_files() {
	find $1 -follow -name '*.e' -print 2>/dev/null
}

dependency_list() {
	clname=$1; shift
	files=$*
	list=
	for f in $files; do
		if sed '/^[ 	]*--/d;s/"[^"]*"/""/g' $f|
			grep "\<$clname\>" >/dev/null; then
			list="$list $f"
		fi
	done
	echo $list
}

if [ $# -lt 2 ]; then
	usage
	exit -1
fi
clusterA=$1
clusterB=$2
if [ ! -d "$clusterA" -o ! -d "$clusterB" ]; then
	echo $clusterA or $clusterB is not a directory, exiting ...
	exit -1
fi

afiles="$(eiffel_files $clusterA)"
bfiles="$(cd $clusterB/ >/dev/null; eiffel_files .)"
if [ -z "$afiles" -o -z "$bfiles" ]; then exit 0; fi
for f in $bfiles
do
	classname=$(basename $f .e|tr '[a-z]' '[A-Z]')
	if
		grep "\<$classname\>" $afiles >/dev/null
	then
			l=$(dependency_list "$classname" $afiles)
			if [ ! -z "$l" ]; then
				echo -e classes: '"'$l'"' "depend on $clusterB/$f"
				Result=1
			fi
	fi
done

exit $Result
