Need to deal with stock splits - calculate/adjust backwards from the split.

Allow separate indepent windows, each with its own indicator or set of
indicators.  (Some windows may have "sub-windows" within them, for parallel
comparisons of different indicators.)

Allow a list of user-comment strings, each string associated with a time
period.  For example, for stock X, daily time period 7/1/98 has a comment
about the stock patterns entered on that day; for the same stock, daily
time period 7/7/98 has 3 different comments (3 separate strings) for the
same day, each one covering a different aspect of the stock (and/or, perhaps,
written by a different person).

Compute weekly data on the fly from daily data - high = highest high of the
week, low = lowest low, open = Monday's open, close = Friday's close.

The technical analysis engine should be designed as a re-usable component
with a well-defined interface.

A "library" of technical indicators will be available.  Each tradable (stock
or commodity or whatever) will have its own list of indicators, set by the
user.  (The system will be shipped with a default list.)  When adding/removing
indicators from the library, the user will have the option of adding/removing
the indicator to/from all tradables or just to/from specific tradables.

Performance constraints that affect design:  In order not to hog too much
memory, the application may need to be designed such that items (such as
market data for a stock and/or the results of running an indicator on that
data) not used for a while will be garbage collected.  Perhaps a mechanism
that keeps track of accesses of data sets and releases those that have not
been accessed for a while would be a good solution to this.  Data sets that
are released will have to be rebuild again whenever the user requests that
particular data.
