note
	description	: "Root class for this application."
	author		: "Generated by the New Vision2 Application Wizard."
	date		: "$Date$"
	revision	: "1.0.0"
	licensing: "Copyright: nobody"

class
	APPLICATION

inherit
	EV_APPLICATION

create
	make_and_launch 

feature {NONE} -- Initialization

	make_and_launch
			-- Initialize and launch application
		do
			default_create
--			prepare
--			launch
			finish_installation
		end

	prepare
			-- Prepare the main window to be displayed.
			-- Perform one call to main window in order to
			-- avoid to violate the invariant of class EV_APPLICATION.
		do
				-- create and initialize the main window.
			create main_window

				-- Show the main window.
				--| TODO: Remove this line if you don't want the first 
				--|       window to be shown at the start of the program.
			main_window.show
		end

feature {NONE} -- Implementation

	main_window: MAIN_WINDOW
			-- Main window.

	execute_command (cmd: INSTALL_COMMAND)
			-- Execute all elements in `cmds'.
		require
			cmd_exists: cmd /= Void
		do
			if main_window /= Void then
				main_window.set_status (cmd.description)
			end
			cmd.execute (options)
		end

	finish_installation
			-- Complete the installation.
		local
			cmds: ARRAY [COMMAND]
		do
			cmds := <<create {CONFIGURE_MCT_COMMAND}.make,
				create {COPY_MCT_FILE_COMMAND}.make,
				create {CLEANUP_COMMAND}.make>>
			cmds.linear_representation.do_all (agent execute_command)
		end

	options: INSTALL_TOOL_COMMAND_LINE
		once
			create Result.make
		end
	
end -- class APPLICATION
