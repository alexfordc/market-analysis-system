#!/bin/bash
# Process stock split data from investorlink into MAS stock split data.
# If there is no data for the specified date, do nothing.

Progname="$(basename $0)"

# DB command to append splits
add_split_cmd=add_stock_splits

use_db () {
	[ ! -z "$MAS_DATA_IN_DB" ]
	return $?
}

use_files () {
	[ ! -z "$MAS_DATA_IN_FILES" ]
	return $?
}

check_env() {
	if [ -z "$EOD_DIRECTORY" ]; then
		echo "$Progname: Error, environment variable EOD_DIRECTORY" \
			"not set - exiting ..."
		exit -1
	fi
	if [ ! -d "$EOD_DIRECTORY" ]; then
		echo "$Progname: Error, $EOD_DIRECTORY is not a directory" \
			"exiting ..."
		exit -2
	fi
	if [ -z "$MAS_DIRECTORY" ]; then
		echo "$Progname: Error, environment variable MAS_DIRECTORY" \
			"not set - exiting ..."
		exit -1
	fi
	if [ ! -d "$MAS_DIRECTORY" ]; then
		echo "$Progname: Error, $MAS_DIRECTORY is not a directory" \
			"exiting ..."
		exit -2
	fi
	if use_db; then
		type -p $add_split_cmd
		if [ $? -ne 0 ]; then
			echo "$Progname: Error, $add_split_cmd, needed for database " \
				"updates, is not in the PATH - exiting ..."
			exit -2
		fi
	fi

}

check_dirs() {
	if [ ! -d ../splits -o ! -w ../splits -o ! -x ../splits ]; then
		echo "$Progname: Error, $PWD/../splits doesn't exist or is not " \
				"writable - exiting ..."
		exit -3
	fi
}

#Usage: process_splits source_split_file
process_splits() {
python <<EOPY
from string import split, join
def pct_split_calc(s):
	# Remove '%' at end of s.
	if s[len(s) - 1] == '%': s = s[:-1]
	if s[0] == '-':
		pctval = eval(s[1:])
		result = 100.0 / (100.0 - pctval)
	else:
		pctval = eval(s)
		result = 100.0 / pctval
	return result
input = open("$1", 'r')
for line in input.readlines():
	fields = split(line)
	symbol = fields[0]
	if len(fields) >= 4:
		s = split(fields[3], '-')
		split_value = float(eval(s[0])) / float(eval(s[1]))
	elif len(fields) == 3:
		split_value = pct_split_calc(fields[2])
	else:  # Missing split value - Skip to next split record.
		continue
	year = fields[1][:4]
	month = fields[1][4:6]
	day = fields[1][6:]
	print '%s%s%s\t%s\t%f' % (year, month, day, symbol, split_value)
EOPY
}

process_split_file() {
	process_splits "$1" | sort -u - $tgt_split_file >$tmpfile
	cp $tmpfile $tgt_split_file
	rm $tmpfile
}

check_env
tgt_split_file=$MAS_DIRECTORY/stock_splits
cd $EOD_DIRECTORY
if [ $? -ne 0 ]; then
	echo "$Progname: cd to $EOD_DIRECTORY failed, exiting ..."
	exit -3
fi
check_dirs
tmpfile=/tmp/procsplits.$$

src_split_files="$(ls SPLT* 2>/dev/null)"
if [ ! -z "$src_split_files" ]; then
	for f in $src_split_files; do
		if use_db; then
			process_splits $f | sed 's/	/,/g' | $add_split_cmd
			if use_files; then
				process_split_file $f
			fi
		else
			process_split_file $f
		fi
	done
	mv $src_split_files ../splits
fi
